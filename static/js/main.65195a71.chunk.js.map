{"version":3,"sources":["redux/actions.js","components/ContactForm.js","components/ContactList.js","components/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","deleteContact","ChangeFilter","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","id","uuidv4","props","onSubmit","isName","phonebook","items","find","item","isNumber","alert","className","this","type","onChange","pattern","title","required","Component","connect","dispatch","contact","filter","contacts","toLowerCase","includes","getFilteredContacts","onDelete","length","map","onClick","Filter","defaultProps","event","target","App","createReducer","action","payload","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.65195a71.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('phonebook/Add');\r\n\r\nexport const deleteContact = createAction('phonebook/Delete');\r\n\r\nexport const ChangeFilter = createAction('phonebook/ChangeFilter');\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../redux/actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const id = uuidv4();\r\n    const { name, number } = this.state;\r\n    const { onSubmit, state } = this.props;\r\n\r\n    const isName = state.phonebook.items.find(item => item.name === name);\r\n    const isNumber = state.phonebook.items.find(item => item.number === number);\r\n\r\n    if (isName || isNumber) {\r\n      alert('contact is already in list');\r\n      return;\r\n    }\r\n    const newContact = { id, name, number };\r\n    onSubmit(newContact);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form__label\">\r\n          <h3 className=\"form__title\">Name</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <h3 className=\"form__title\">Phone</h3>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"form__btn\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n// proptypes\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","// import ContactListItem from './ContactListItem';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../redux/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ items, onDelete }) => {\r\n  return (\r\n    items.length > 0 && (\r\n      <ul className=\"ContactList\">\r\n        {items.map(({ id, name, number }) => (\r\n          <li key={id}>\r\n            <p>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"ContactList__btn\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nconst getFilteredContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { filter, items } = state.phonebook;\r\n  const filteredContacts = getFilteredContacts(items, filter);\r\n  return { items: filteredContacts };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n// proptypes\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { ChangeFilter } from '../redux/actions';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <div className=\"Filter\">\r\n      <p className=\"form__title \">Find Contacts By Name</p>\r\n      <input type=\"text\" value={value} onChange={onChange}></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.phonebook.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(ChangeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <div className=\"Container\">\r\n        <section title=\"Phonebook\" className=\"Phonebook__section\">\r\n          <h1 className=\"Phonebook__title\">Phonebook</h1>\r\n          <ContactForm />\r\n        </section>\r\n        <section title=\"Contacts\" className=\"Contacts\">\r\n          <h2 className=\"Contacts__title\">Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, ChangeFilter } from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [ChangeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: items,\r\n  filter: filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './reducer';\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading=\"wait a moment...\" persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}